/* Font Poppins */
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;600&display=swap");

/* ----------------------------------------------------- */
/* GLOBAL RESET */
* {
  box-sizing: border-box;
}
/* ----------------------------------------------------- */
/* BODY */
body {
  background-image: url("image/josie-weiss-OqLT-Wru5MU-unsplash.jpg");
  background-size: cover;
  background-position: center center;
  display: flex;
  flex-direction: column;
  align-items: center;
  /* justify-content: center; */
  min-height: 100vh;
  font-family: "Poppins", sans-serif;
  margin: 0;
  color: #fff;
}
h1 {
    font-weight: normal;
    font-size: 4rem;
    margin-top: 7rem ;
}
/* ----------------------------------------------------- */
/* COUNTDOWN CONTAINER */
.countdown-container {
    display: flex;
    flex-wrap: wrap; /* responsive for mobile */
    justify-content: center;
}
.big-text {
    font-weight: bold;
    font-size: 5rem;
    line-height: 1;
    margin: 1rem 2rem;
}
.countdown-element {
   text-align: center; 
}
.countdown-element span {
    font-size: 1.3rem;
}
/* ----------------------------------------------------- */

/* 
OBSERVAÇÕES:
    - o Flex-wrap é uma propriedade Flexbox que controla como os itens dentro de um container flex se comportam quando não cabem em uma única linha. No comportamento padrão (nowrap), os itens flex tentam se espremer todos na mesma linha, mesmo que isso distorça os elementos ou cause overflow, mas com o wrap ativado, se os itens não couberem na largura do container, eles *quebram a linha*. O wrap é essencial para layouts responsivos, especialmente mobile.
    No caso do uso no .countdown-container, o objetivo do wrap é garantir que os elementos da classe (dias, horas, minutos e segundos) quebrem para uma nova linha em telas pequenas, em vez de ficarem amontoados.
    Para um maior controle sobre quando os itens quebram, usar min-width nos itens filhos.
*/